Parameters:
  Environment:
    Type: String
    Default: Development
    AllowedValues:
      - Development
      - Production
      - Local
      - Integration
      - Test

Resources:

  #Create new VPC (This VPC may be same can be used for future applications too)
  ServianTechChallengAppVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: "172.32.3.0/24"
      EnableDnsHostnames: true
      EnableDnsSupport: true

      Tags:
        - Key: Name
          Value: ServianTechChallengeVPC

  #Create Secutiry Group for new VPC
  ServianTechChallengAppSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Group for TechChallengeApp
      VpcId: !Ref ServianTechChallengAppVPC
      SecurityGroupIngress:
        - CidrIp: 172.32.3.0/24
          IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 3000
          ToPort: 3000
  #Create and IGW to provide internet access to the VPC CAUTION: This is quite expensive and not under free-tier
  ServianTechChallengAppVPCIGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: stack
          Value: CustomApps

  #Attach this IGW to VPC
  VPCIGWAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref ServianTechChallengAppVPCIGW
      VpcId: !Ref ServianTechChallengAppVPC

  #Add some private and public Subnets in VPC
  ServianTechChallengeAppPvtSN1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 172.32.3.0/28 #!Select [0, !Cidr [ !GetAtt GenericVPC.CidrBlock,1,8]]
      VpcId: !Ref ServianTechChallengAppVPC
      AvailabilityZone: !Select
          - 0
          - !GetAZs
            Ref: 'AWS::Region'
      Tags:
        - Key: Name
          Value: servian-tech-challenge-pvt-sn-1
  ServianTechChallengeAppPvtSN2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 172.32.3.16/28 #!Select [0, !Cidr [ !GetAtt GenericVPC.CidrBlock,1,8]]
      VpcId: !Ref ServianTechChallengAppVPC
      AvailabilityZone: !Select
        - 1
        - !GetAZs
          Ref: 'AWS::Region'
      Tags:
        - Key: Name
          Value: servian-tech-challenge-pvt-sn-2

  ServianTechChallengeAppPubSN1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 172.32.3.32/28 #!Select [0, !Cidr [ !GetAtt GenericVPC.CidrBlock,1,8]]
      VpcId: !Ref ServianTechChallengAppVPC
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select
        - 0
        - !GetAZs
          Ref: 'AWS::Region'
      Tags:
        - Key: Name
          Value: servian-tech-challenge-pub-sn-1
  ServianTechChallengeAppPubSN2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 172.32.3.48/28 #!Select [0, !Cidr [ !GetAtt GenericVPC.CidrBlock,1,8]]
      VpcId: !Ref ServianTechChallengAppVPC
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select
        - 1
        - !GetAZs
          Ref: 'AWS::Region'
      Tags:
        - Key: Name
          Value: servian-tech-challenge-pub-sn-2

  #Now create RouteTable for newly created VPC
  ServianTechChallengAppTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref ServianTechChallengAppVPC

  #Associate Subnets to the RouteTable
  PublicSubnetOneRouteAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref ServianTechChallengAppTable
      SubnetId: !Ref ServianTechChallengeAppPubSN1
  PublicSubnetTwoRouteAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref ServianTechChallengAppTable
      SubnetId: !Ref ServianTechChallengeAppPubSN2

  #Now map the traffic between Public Subnet and IGW
  InternetGatewayRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref ServianTechChallengAppTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref ServianTechChallengAppVPCIGW

Outputs:
  ServianTechChallengeAppVPC:
    Description: Servian Tech Challenge APP VPC
    Value: !Ref ServianTechChallengAppVPC
    Export:
      Name: ServianTechChallengAppVPC
  ServianTechChallengAppSG:
    Description: Servian Tech Challenge App default SG
    Value: !Ref ServianTechChallengAppSG
    Export:
      Name: ServianTechChallengAppSG

  ServianTechChallengeAppDBLayerSN1:
    Description: Servian Tech Challenge App Private Subnet 1
    Value: !Ref ServianTechChallengeAppPvtSN1
    Export:
      Name: ServianTechChallengeAppPvtSN1
  ServianTechChallengeAppDBLayerAZ1:
    Description: Servian Tech Challenge App AZ for private SN 1
    Value: !GetAtt ServianTechChallengeAppPvtSN1.AvailabilityZone
    Export:
      Name: ServianTechChallengeAppPvtAZ1
  ServianTechChallengeAppDBLayerSN2:
    Description: Servian Tech Challenge App Private Subnet 2
    Value: !Ref ServianTechChallengeAppPvtSN2
    Export:
      Name: ServianTechChallengeAppPvtSN2  
  ServianTechChallengeAppDBLayerAZ2:
    Description: Servian Tech Challenge App AZ for private SN 2
    Value: !GetAtt ServianTechChallengeAppPvtSN2.AvailabilityZone
    Export:
      Name: ServianTechChallengeAppPvtAZ2

  ServianTechChallengeAppWebLayerSN1:
    Description: Servian Tech Challenge App Public Subnet 1
    Value: !Ref ServianTechChallengeAppPubSN1
    Export:
      Name: ServianTechChallengeAppPubSN1
  ServianTechChallengeAppWebLayerAZ1:
    Description: Servian Tech Challenge App Public Subnet 1
    Value: !GetAtt ServianTechChallengeAppPubSN1.AvailabilityZone
    Export:
      Name: ServianTechChallengeAppPubAZ1
  ServianTechChallengeAppWebLayerSN2:
    Description: Servian Tech Challenge App Public Subnet 1
    Value: !Ref ServianTechChallengeAppPubSN2
    Export:
      Name: ServianTechChallengeAppPubSN2
  ServianTechChallengeAppWebLayerAZ2:
    Description: Servian Tech Challenge App Public Subnet 1
    Value: !GetAtt ServianTechChallengeAppPubSN2.AvailabilityZone
    Export:
      Name: ServianTechChallengeAppPubAZ2